#! /bin/bash
#
# This script will make a DVD 
# ovjBuildDir is exported from the calling script buildovj
# 1. Remove all previous files
# 2. Clone the git-repo 
# 3. Compile and build all parts into vnmr (scons command)
# 4. Put everything into tarfiles
# 
# for email to work properly typcially the /etc/mail/sendmail.mc must be modified
# to indecate the proper email forwarder , this is used to generate the sendmail.cf file
# e.g.
#      dnl # Uncomment and edit the following line if your outgoing mail needs to
#      dnl # be sent out through an external mail server:
#      #
#      define(`SMART_HOST',`cos.smtp.agilent.com')
#      #
#    /etc/init.d/sendmail restart  should regenerate the sendmail.cf file and restart the senmail deamon
#
# there appears to be other confiurations that are needed, like /etc/resolv.conf, /etc/hosts  and
# obvious something else but for now I can't seem to find out what it is.
# e.g. vj2 email works but can't get vj3 email to work.      GMB  8/23/2010
#
# set -x

date=`date`
buildDir=$ovjBuildDir
echo "build directory is $buildDir"
echo "user is $USER"
# capture the present working directory
cwd=$(pwd)

if [ x$doScons = "xyes" ]
then
  # Step 1. Remove all previous files
  echo "===>>> $date Removing $dvdBuildName1 options vnmr console <<<==="
  rm -rf $dvdBuildName1 options vnmr console

  # Step 2. Clone the git-repo
  if [[ ! -d $buildDir/OpenVnmrJ ]]; then
     doGitClone="yes"
  fi
  if [ x$doGitClone = "xyes" ]
  then
    date=`date`
    echo "===>>> $date Removing old OpenVnmrJ <<<==="
    cd $buildDir
    rm -rf OpenVnmrJ
    if [ x$gitSSH = "x" ]
    then
       echo "===>>> $date Clone OpenVnmrJ (https) <<<==="
       git clone ${gitURL}/OpenVnmrJ.git
    else
       echo "===>>> $date Clone OpenVnmrJ (ssh) <<<==="
       git clone ${gitSSH}/OpenVnmrJ.git
    fi
    cd $buildDir/OpenVnmrJ
    git checkout $gitRelease
  fi
  if [ x$doGitClone = "xpull" ]
  then
    cd $buildDir/OpenVnmrJ
    # src is mixed with copied files and build artifacts
    rm -rf src scripts README.md SConstruct
    git checkout src scripts README.md SConstruct
    git pull 
    git checkout $gitRelease
  fi
  if [ x$doGitClone = "xrebuild" ]
  then
    cd $buildDir/OpenVnmrJ
    rm -rf src
    git checkout src
    git checkout $gitRelease
  fi

  # Step 3. Clone the ovjTools git-repo
  if [[ ! -d $buildDir/ovjTools ]]; then
     doGitToolsClone="yes"
  fi
  if [ x$doGitToolsClone = "xyes" ]
  then
    cd $buildDir
    date=`date`
    echo "===>>> $date Removing old ovjTools <<<==="
    rm -rf ovjTools
    echo "===>>> $date Clone ovjTools (https) <<<==="
    git clone ${gitURL}/ovjTools.git
    git checkout $gitRelease
  fi
  if [ x$doGitToolsClone = "xpull" ]
  then
    cd $buildDir/ovjTools
    git pull 
    git checkout $gitRelease
  fi

  # Step 4. Add Resynamt components
  echo "===>>> $date Copy and Replace Resynant sources <<<==="
  cd $buildDir/OpenVnmrJ_R
  tar cf - README.md SConstruct src scripts | (cd $buildDir/OpenVnmrJ && tar xpf -)

  echo "===>>> $date Executing 'scons' <<<==="
  # build status
  status="OK"
  SCONSFLAGS='--warn=no-duplicate-environment'
  export SCONSFLAGS
  # Build the ncomm libraries first
  cd $buildDir/OpenVnmrJ/src/ncomm
  if [[ -x /usr/bin/scons ]]; then
     scons -j $sconsJoption 
  elif [[ -x /usr/bin/scons-3 ]]; then
     scons-3 -j $sconsJoption 
  else
     echo "scons not installed"
     exit 1
  fi
  result=$?
  if [ $result -eq 0 ] ; then
     cd $buildDir/OpenVnmrJ
     if [[ -x /usr/bin/scons ]]; then
        scons -j $sconsJoption 
     elif [[ -x /usr/bin/scons-3 ]]; then
        scons-3 -j $sconsJoption 
     fi
     result=$?
  fi
  echo "scons returned: $result"
  if [ $result -ne 0 ] ; then
    echo "===>>> scons Build error  <<<==="

    if [ x"$mail_list" != "x" ]
    then
       status="Failed"
       echo "===>>> Email results of Failure check  <<<==="
       msg=`echo "scons build on $HOSTNAME returned an error: $result"`
       # echo "$msg" | mail -v -n -s "Automated Email, Build Status: $status" $mail_list
       echo "$msg" | mail -n -s "Automated Email, Build Status: $status" $mail_list
    fi
    exit 1
  fi

  cd "$cwd"
fi
   
if [ x$buildR = "xyes" ]
then
# Step 4. Tar and build vnmrj-cd
   date=`date`
   rm -rf $buildDir/$dvdBuildName1
   echo "===>>> $date Building OpenVnmrJ DVD <<<==="
   (cd $buildDir/OpenVnmrJ/src/scripts;       \
      make ovjrout
      ./ovjrout
   )
fi

# step 5/ Done
date=`date`
echo "===>>> $date  Finished (re)build <<<==="

if [ x"$mail_list" != "x" ]
then
   status="OK"
   echo "===>>> Email results of Successful build  <<<==="
   msg=`echo "Build Completed OK on $HOSTNAME"`
   echo "$msg" | mail -n -s "Automated Email, Build Status: $status" $mail_list
fi

